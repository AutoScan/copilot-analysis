var r = require(3832);
require(28991);
require(97116);
var i = module.exports = r.sha512 = r.sha512 || {};
r.md.sha512 = r.md.algorithms.sha512 = i;
var o = r.sha384 = r.sha512.sha384 = r.sha512.sha384 || {};
o.create = function () {
  return i.create("SHA-384");
};
r.md.sha384 = r.md.algorithms.sha384 = o;
r.sha512.sha256 = r.sha512.sha256 || {
  create: function () {
    return i.create("SHA-512/256");
  }
};
r.md["sha512/256"] = r.md.algorithms["sha512/256"] = r.sha512.sha256;
r.sha512.sha224 = r.sha512.sha224 || {
  create: function () {
    return i.create("SHA-512/224");
  }
};
r.md["sha512/224"] = r.md.algorithms["sha512/224"] = r.sha512.sha224;
i.create = function (e) {
  if (a) {
    s = String.fromCharCode(128);
    s += r.util.fillString(String.fromCharCode(0), 128);
    c = [[1116352408, 3609767458], [1899447441, 602891725], [3049323471, 3964484399], [3921009573, 2173295548], [961987163, 4081628472], [1508970993, 3053834265], [2453635748, 2937671579], [2870763221, 3664609560], [3624381080, 2734883394], [310598401, 1164996542], [607225278, 1323610764], [1426881987, 3590304994], [1925078388, 4068182383], [2162078206, 991336113], [2614888103, 633803317], [3248222580, 3479774868], [3835390401, 2666613458], [4022224774, 944711139], [264347078, 2341262773], [604807628, 2007800933], [770255983, 1495990901], [1249150122, 1856431235], [1555081692, 3175218132], [1996064986, 2198950837], [2554220882, 3999719339], [2821834349, 766784016], [2952996808, 2566594879], [3210313671, 3203337956], [3336571891, 1034457026], [3584528711, 2466948901], [113926993, 3758326383], [338241895, 168717936], [666307205, 1188179964], [773529912, 1546045734], [1294757372, 1522805485], [1396182291, 2643833823], [1695183700, 2343527390], [1986661051, 1014477480], [2177026350, 1206759142], [2456956037, 344077627], [2730485921, 1290863460], [2820302411, 3158454273], [3259730800, 3505952657], [3345764771, 106217008], [3516065817, 3606008344], [3600352804, 1432725776], [4094571909, 1467031594], [275423344, 851169720], [430227734, 3100823752], [506948616, 1363258195], [659060556, 3750685593], [883997877, 3785050280], [958139571, 3318307427], [1322822218, 3812723403], [1537002063, 2003034995], [1747873779, 3602036899], [1955562222, 1575990012], [2024104815, 1125592928], [2227730452, 2716904306], [2361852424, 442776044], [2428436474, 593698344], [2756734187, 3733110249], [3204031479, 2999351573], [3329325298, 3815920427], [3391569614, 3928383900], [3515267271, 566280711], [3940187606, 3454069534], [4118630271, 4000239992], [116418474, 1914138554], [174292421, 2731055270], [289380356, 3203993006], [460393269, 320620315], [685471733, 587496836], [852142971, 1086792851], [1017036298, 365543100], [1126000580, 2618297676], [1288033470, 3409855158], [1501505948, 4234509866], [1607167915, 987167468], [1816402316, 1246189591]];
    (l = {})["SHA-512"] = [[1779033703, 4089235720], [3144134277, 2227873595], [1013904242, 4271175723], [2773480762, 1595750129], [1359893119, 2917565137], [2600822924, 725511199], [528734635, 4215389547], [1541459225, 327033209]];
    l["SHA-384"] = [[3418070365, 3238371032], [1654270250, 914150663], [2438529370, 812702999], [355462360, 4144912697], [1731405415, 4290775857], [2394180231, 1750603025], [3675008525, 1694076839], [1203062813, 3204075428]];
    l["SHA-512/256"] = [[573645204, 4230739756], [2673172387, 3360449730], [596883563, 1867755857], [2520282905, 1497426621], [2519219938, 2827943907], [3193839141, 1401305490], [721525244, 746961066], [246885852, 2177182882]];
    l["SHA-512/224"] = [[2352822216, 424955298], [1944164710, 2312950998], [502970286, 855612546], [1738396948, 1479516111], [258812777, 2077511080], [2011393907, 79989058], [1067287976, 1780299464], [286451373, 2446758561]];
    a = !0;
  }
  if (void 0 === e) {
    e = "SHA-512";
  }
  if (!(e in l)) throw new Error("Invalid SHA-512 algorithm: " + e);
  for (t = l[e], n = null, i = r.util.createBuffer(), o = new Array(80), p = 0, void 0; p < 80; ++p) {
    var t;
    var n;
    var i;
    var o;
    var p;
    o[p] = new Array(2);
  }
  var d = 64;
  switch (e) {
    case "SHA-384":
      d = 48;
      break;
    case "SHA-512/256":
      d = 32;
      break;
    case "SHA-512/224":
      d = 28;
  }
  var h = {
    algorithm: e.replace("-", "").toLowerCase(),
    blockLength: 128,
    digestLength: d,
    messageLength: 0,
    fullMessageLength: null,
    messageLengthSize: 16,
    start: function () {
      h.messageLength = 0;
      h.fullMessageLength = h.messageLength128 = [];
      for (e = h.messageLengthSize / 4, o = 0, void 0; o < e; ++o) {
        var e;
        var o;
        h.fullMessageLength.push(0);
      }
      for (i = r.util.createBuffer(), n = new Array(t.length), o = 0; o < t.length; ++o) n[o] = t[o].slice(0);
      return h;
    }
  };
  h.start();
  h.update = function (e, t) {
    if ("utf8" === t) {
      e = r.util.encodeUtf8(e);
    }
    var s = e.length;
    h.messageLength += s;
    s = [s / 4294967296 >>> 0, s >>> 0];
    for (var a = h.fullMessageLength.length - 1; a >= 0; --a) {
      h.fullMessageLength[a] += s[1];
      s[1] = s[0] + (h.fullMessageLength[a] / 4294967296 >>> 0);
      h.fullMessageLength[a] = h.fullMessageLength[a] >>> 0;
      s[0] = s[1] / 4294967296 >>> 0;
    }
    i.putBytes(e);
    u(n, o, i);
    if (i.read > 2048 || 0 === i.length()) {
      i.compact();
    }
    return h;
  };
  h.digest = function () {
    var t = r.util.createBuffer();
    t.putBytes(i.bytes());
    var a;
    var c = h.fullMessageLength[h.fullMessageLength.length - 1] + h.messageLengthSize & h.blockLength - 1;
    t.putBytes(s.substr(0, h.blockLength - c));
    for (l = 8 * h.fullMessageLength[0], p = 0, void 0; p < h.fullMessageLength.length - 1; ++p) {
      var l;
      var p;
      l += (a = 8 * h.fullMessageLength[p + 1]) / 4294967296 >>> 0;
      t.putInt32(l >>> 0);
      l = a >>> 0;
    }
    t.putInt32(l);
    var d = new Array(n.length);
    for (p = 0; p < n.length; ++p) d[p] = n[p].slice(0);
    u(d, o, t);
    var f;
    var m = r.util.createBuffer();
    for (f = "SHA-512" === e ? d.length : "SHA-384" === e ? d.length - 2 : d.length - 4, p = 0; p < f; ++p) {
      m.putInt32(d[p][0]);
      if (p === f - 1 && "SHA-512/224" === e) {
        m.putInt32(d[p][1]);
      }
    }
    return m;
  };
  return h;
};
var s = null;
var a = !1;
var c = null;
var l = null;
function u(e, t, n) {
  for (B = n.length(), void 0; B >= 128;) {
    var r;
    var i;
    var o;
    var s;
    var a;
    var l;
    var u;
    var p;
    var d;
    var h;
    var f;
    var m;
    var g;
    var y;
    var _;
    var v;
    var b;
    var E;
    var w;
    var T;
    var S;
    var x;
    var C;
    var I;
    var A;
    var k;
    var P;
    var N;
    var O;
    var R;
    var M;
    var L;
    var D;
    var B;
    for (P = 0; P < 16; ++P) {
      t[P][0] = n.getInt32() >>> 0;
      t[P][1] = n.getInt32() >>> 0;
    }
    for (; P < 80; ++P) {
      r = (((N = (R = t[P - 2])[0]) >>> 19 | (O = R[1]) << 13) ^ (O >>> 29 | N << 3) ^ N >>> 6) >>> 0;
      i = ((N << 13 | O >>> 19) ^ (O << 3 | N >>> 29) ^ (N << 26 | O >>> 6)) >>> 0;
      o = (((N = (L = t[P - 15])[0]) >>> 1 | (O = L[1]) << 31) ^ (N >>> 8 | O << 24) ^ N >>> 7) >>> 0;
      s = ((N << 31 | O >>> 1) ^ (N << 24 | O >>> 8) ^ (N << 25 | O >>> 7)) >>> 0;
      M = t[P - 7];
      D = t[P - 16];
      O = i + M[1] + s + D[1];
      t[P][0] = r + M[0] + o + D[0] + (O / 4294967296 >>> 0) >>> 0;
      t[P][1] = O >>> 0;
    }
    for (f = e[0][0], m = e[0][1], g = e[1][0], y = e[1][1], _ = e[2][0], v = e[2][1], b = e[3][0], E = e[3][1], w = e[4][0], T = e[4][1], S = e[5][0], x = e[5][1], C = e[6][0], I = e[6][1], A = e[7][0], k = e[7][1], P = 0; P < 80; ++P) {
      u = ((w >>> 14 | T << 18) ^ (w >>> 18 | T << 14) ^ (T >>> 9 | w << 23)) >>> 0;
      p = (C ^ w & (S ^ C)) >>> 0;
      a = ((f >>> 28 | m << 4) ^ (m >>> 2 | f << 30) ^ (m >>> 7 | f << 25)) >>> 0;
      l = ((f << 4 | m >>> 28) ^ (m << 30 | f >>> 2) ^ (m << 25 | f >>> 7)) >>> 0;
      d = (f & g | _ & (f ^ g)) >>> 0;
      h = (m & y | v & (m ^ y)) >>> 0;
      O = k + (((w << 18 | T >>> 14) ^ (w << 14 | T >>> 18) ^ (T << 23 | w >>> 9)) >>> 0) + ((I ^ T & (x ^ I)) >>> 0) + c[P][1] + t[P][1];
      r = A + u + p + c[P][0] + t[P][0] + (O / 4294967296 >>> 0) >>> 0;
      i = O >>> 0;
      o = a + d + ((O = l + h) / 4294967296 >>> 0) >>> 0;
      s = O >>> 0;
      A = C;
      k = I;
      C = S;
      I = x;
      S = w;
      x = T;
      w = b + r + ((O = E + i) / 4294967296 >>> 0) >>> 0;
      T = O >>> 0;
      b = _;
      E = v;
      _ = g;
      v = y;
      g = f;
      y = m;
      f = r + o + ((O = i + s) / 4294967296 >>> 0) >>> 0;
      m = O >>> 0;
    }
    O = e[0][1] + m;
    e[0][0] = e[0][0] + f + (O / 4294967296 >>> 0) >>> 0;
    e[0][1] = O >>> 0;
    O = e[1][1] + y;
    e[1][0] = e[1][0] + g + (O / 4294967296 >>> 0) >>> 0;
    e[1][1] = O >>> 0;
    O = e[2][1] + v;
    e[2][0] = e[2][0] + _ + (O / 4294967296 >>> 0) >>> 0;
    e[2][1] = O >>> 0;
    O = e[3][1] + E;
    e[3][0] = e[3][0] + b + (O / 4294967296 >>> 0) >>> 0;
    e[3][1] = O >>> 0;
    O = e[4][1] + T;
    e[4][0] = e[4][0] + w + (O / 4294967296 >>> 0) >>> 0;
    e[4][1] = O >>> 0;
    O = e[5][1] + x;
    e[5][0] = e[5][0] + S + (O / 4294967296 >>> 0) >>> 0;
    e[5][1] = O >>> 0;
    O = e[6][1] + I;
    e[6][0] = e[6][0] + C + (O / 4294967296 >>> 0) >>> 0;
    e[6][1] = O >>> 0;
    O = e[7][1] + k;
    e[7][0] = e[7][0] + A + (O / 4294967296 >>> 0) >>> 0;
    e[7][1] = O >>> 0;
    B -= 128;
  }
}